Naabu
Parâmetros (pt-br)
-host <alvo>: Define o alvo único para escaneamento.
-p <portas>: Especifica as portas a serem escaneadas (ex.: -p 80,443,1000-2000 ou -p - para todas as portas).
-exclude-ports <portas>: Exclui portas específicas do escaneamento (ex.: -exclude-ports 80,443).
-c <threads>: Define o número de threads paralelas (padrão: 25).
-silent: Executa o escaneamento em modo silencioso, exibindo apenas os resultados.
-o <arquivo>: Salva os resultados do escaneamento em um arquivo.
-json: Gera a saída no formato JSON.
Parameters (en)
-host <target>: Specifies the single target for scanning.
-p <ports>: Specifies the ports to scan (e.g., -p 80,443,1000-2000 or -p - for all ports).
-exclude-ports <ports>: Excludes specific ports from the scan (e.g., -exclude-ports 80,443).
-c <threads>: Sets the number of parallel threads (default: 25).
-silent: Runs the scan in silent mode, showing only results.
-o <file>: Saves the scan results to a file.
-json: Outputs the results in JSON format.
httpx
Parâmetros (pt-br)
-l <arquivo>: Define uma lista de alvos para escaneamento (geralmente saída do Naabu).
-silent: Executa o escaneamento em modo silencioso, exibindo apenas os resultados essenciais.
-o <arquivo>: Salva os resultados (URLs válidas, IPs, status HTTP, etc.) em um arquivo.
-title: Exibe o título da página HTML (útil para identificar serviços).
-sc: Exibe o código de status HTTP (ex.: 200, 403).
-tech-detect: Detecta tecnologias usadas (ex.: Apache, WordPress).
-web-server: Mostra o servidor web (Apache, Nginx) via cabeçalho HTTP.
-follow-redirects: Segue redirecionamentos HTTP.
Parameters (en)
-l <file>: Specifies a list of targets for scanning (usually output from Naabu).
-silent: Runs the scan in silent mode, showing only essential results.
-o <file>: Saves the results (valid URLs, IPs, HTTP status, etc.) to a file.
-title: Displays the HTML page title (useful for identifying services).
-sc: Displays the HTTP status code (e.g., 200, 403).
-tech-detect: Detects technologies used (e.g., Apache, WordPress).
-web-server: Shows the web server (Apache, Nginx) via HTTP headers.
-follow-redirects: Follows HTTP redirects.
Nuclei
Parâmetros (pt-br)
Entrada
-u <alvo>: Escaneia um único alvo (URL ou host).
-l <arquivo>: Define um arquivo com múltiplos alvos (um por linha).
Templates
-t <path>: Define o caminho para os templates Nuclei a serem utilizados.
-tags <tag1,tag2>: Executa apenas templates com as tags especificadas (ex.: cve, auth).
Saída
-o <arquivo>: Salva as vulnerabilidades encontradas em um arquivo.
-jsonl: Salva a saída no formato JSON Lines (um achado por linha).
-silent: Executa o escaneamento em modo silencioso, exibindo apenas os resultados.
-store-resp: Armazena requests/responses no diretório ./nuclei_output.
Execução e Configuração
-H <header>: Adiciona cabeçalhos HTTP personalizados.
-V <variável>: Define variáveis customizadas (formato: chave=valor).
Outros
-update: Atualiza o binário do Nuclei.
-update-templates: Atualiza os templates para a versão mais recente.
Parameters (en)
Input
-u <target>: Scans a single target (URL or host).
-l <file>: Specifies a file with multiple targets (one per line).
Templates
-t <path>: Specifies the path to the Nuclei templates to use.
-tags <tag1,tag2>: Runs only templates with the specified tags (e.g., cve, auth).
Output
-o <file>: Saves vulnerabilities found to a file.
-jsonl: Outputs results in JSON Lines format (one finding per line).
-silent: Runs the scan in silent mode, showing only results.
-store-resp: Stores requests/responses in the ./nuclei_output directory.
Execution and Configuration
-H <header>: Adds custom HTTP headers.
-V <variable>: Defines custom variables (format: key=value).
Others
-update: Updates the Nuclei binary.
-update-templates: Updates templates to the latest version.