#!/bin/bash
# update_repos.sh - Update and fix repository configuration for Kali Linux

set -e

# Colors for better output
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
RED="\033[0;31m"
BLUE="\033[0;34m"
NC="\033[0m" # No Color

echo -e "${BLUE}===== Kali Linux Repository Update Tool =====${NC}"

# Check for root permissions
if [ "$EUID" -ne 0 ]; then
    echo -e "${YELLOW}This script requires root privileges. Running with sudo...${NC}"
    exec sudo "$0" "$@"
    exit $?
fi

# Define reliable Kali mirror list
MIRRORS=(
    "http://kali.download/kali"
    "http://mirror.ufro.cl/kali"
    "http://ftp.acc.umu.se/mirror/kali.org/kali"
    "http://archive-4.kali.org/kali"
    "http://http.kali.org/kali"
)

# Step 1: Backup existing sources
echo -e "\n${BLUE}[1/4] Creating backup of existing repository configuration...${NC}"
timestamp=$(date +%Y%m%d_%H%M%S)
mkdir -p /etc/apt/sources.list.d.backup
cp /etc/apt/sources.list /etc/apt/sources.list.backup.$timestamp 2>/dev/null || true
cp -r /etc/apt/sources.list.d/* /etc/apt/sources.list.d.backup/ 2>/dev/null || true
echo -e "${GREEN}✓ Backup created${NC}"

# Step 2: Install the Kali archive keyring if needed
echo -e "\n${BLUE}[2/4] Ensuring Kali archive keyring is installed...${NC}"
bash ./fix_repo_keys.sh  # Call the reusable script

# Step 3: Test mirrors and create optimized sources.list
echo -e "\n${BLUE}[3/4] Testing repository mirrors...${NC}"

# Create a new sources.list file with the signed-by option
echo "# Kali Linux repositories - Generated by update_repos.sh
# Multiple mirrors are included for better reliability" > /etc/apt/sources.list

# Test each mirror and add working ones to sources.list
working_mirrors=0
for mirror in "${MIRRORS[@]}"; do
    echo -n "Testing $mirror... "
    
    # Try to fetch the Release file from the mirror
    if timeout 5 wget -q --spider "$mirror/dists/kali-rolling/Release"; then
        echo -e "${GREEN}working${NC}"
        echo "deb [signed-by=/etc/apt/keyrings/kali-archive-keyring.gpg] $mirror kali-rolling main contrib non-free" >> /etc/apt/sources.list
        working_mirrors=$((working_mirrors + 1))
    else
        echo -e "${RED}failed${NC}"
    fi
done

if [ "$working_mirrors" -eq 0 ]; then
    echo -e "${RED}No working mirrors found. Adding default mirrors anyway.${NC}"
    # Add default mirrors as fallback
    echo "deb http://http.kali.org/kali kali-rolling main contrib non-free" >> /etc/apt/sources.list
    echo "deb http://kali.download/kali kali-rolling main contrib non-free" >> /etc/apt/sources.list
else
    echo -e "${GREEN}✓ Added $working_mirrors working mirrors to sources.list${NC}"
fi

# Remove any conflicting sources.list.d files
echo "Cleaning up conflicting repository files..."
rm -f /etc/apt/sources.list.d/kali*.list 2>/dev/null || true

# Step 4: Update package lists
echo -e "\n${BLUE}[4/4] Updating package lists...${NC}"

# Try multiple update methods until one works
if apt-get update; then
    echo -e "${GREEN}✓ Repository update successful${NC}"
elif apt-get update --allow-insecure-repositories; then
    echo -e "${GREEN}✓ Repository update successful with --allow-insecure-repositories${NC}"
elif apt-get update --allow-unauthenticated; then
    echo -e "${GREEN}✓ Repository update successful with --allow-unauthenticated${NC}"
else
    echo -e "${RED}Repository update failed with all methods.${NC}"
    echo "Please check your network connection and try again."
    exit 1
fi

echo -e "\n${GREEN}=====================================${NC}"
echo -e "${GREEN}✓ Repository configuration completed${NC}"
echo -e "${GREEN}=====================================${NC}"

echo -e "\nYou can now proceed with package installation."
exit 0
